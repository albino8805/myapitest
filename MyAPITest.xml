<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MyAPITest</name>
    </assembly>
    <members>
        <member name="M:MyAPITest.Controllers.LoginController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:MyAPITest.Controllers.LoginController"/> class.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="T:MyAPITest.Controllers.UserController">
            <summary>
            UserController
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
        </member>
        <member name="M:MyAPITest.Controllers.UserController.#ctor(MyAPITest.Manager.Interface.IUserManager)">
            <summary>
            Initializes a new instance of the <see cref="T:MyAPITest.Controllers.UserController"/> class.
            </summary>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:MyAPITest.Controllers.UserController.Get">
            <summary>
            Gets this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Controllers.UserController.Get(System.Int32)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Controllers.UserController.Post(MyAPITest.ViewModels.UserViewModel)">
            <summary>
            Posts the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MyAPITest.Controllers.UserController.Patch(System.Int32,MyAPITest.ViewModels.UserViewModel)">
            <summary>
            Patches the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Controllers.UserController.Delete(System.Int32)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="T:MyAPITest.Helpers.Filters.IsValidToken">
            <summary>
            
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute" />
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter" />
        </member>
        <member name="M:MyAPITest.Helpers.Filters.IsValidToken.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <inheritdoc />
        </member>
        <member name="T:MyAPITest.Helpers.TokenHelper">
            <summary>
            TokenHelper
            </summary>
        </member>
        <member name="M:MyAPITest.Helpers.TokenHelper.Decode(System.String)">
            <summary>
            Decodes the specified token.
            </summary>
            <param name="Token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Helpers.TokenHelper.GetToken(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the token.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
            <exception cref="T:System.UnauthorizedAccessException">
            </exception>
        </member>
        <member name="M:MyAPITest.Helpers.TokenHelper.GetValueClaim(System.String,System.String)">
            <summary>
            Gets the value claim.
            </summary>
            <param name="token">The token.</param>
            <param name="claimName">Name of the claim.</param>
            <returns></returns>
        </member>
        <member name="T:MyAPITest.Manager.BaseManager`2">
            <summary>
            BaseManager
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <typeparam name="UViewModel">The type of the view model.</typeparam>
        </member>
        <member name="M:MyAPITest.Manager.BaseManager`2.#ctor(MyAPITest.Repository.Interfaces.IBaseRepository{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:BaseRepository&lt;TEntity&gt;" /> class.
            </summary>
            <param name="repository">The repository.</param>
        </member>
        <member name="M:MyAPITest.Manager.BaseManager`2.Get">
            <summary>
            Gets this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Manager.BaseManager`2.GetById(System.Int32)">
            <summary>
            Gets the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Manager.BaseManager`2.Patch(System.Int32,`1)">
            <summary>
            Patches the specified entity.
            </summary>
            <param name="id"></param>
            <param name="model">The entity.</param>
        </member>
        <member name="M:MyAPITest.Manager.BaseManager`2.Post(`1)">
            <summary>
            Posts the specified entity.
            </summary>
            <param name="model">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Manager.BaseManager`2.Delete(System.Int32)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:MyAPITest.Manager.BaseManager`2.PrepareAddData(`1)">
            <summary>
            Prepares the add data.
            </summary>
            <param name="viewModel">The view model.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MyAPITest.Manager.BaseManager`2.PrepareUpdateData(`0,`1)">
            <summary>
            Prepares the update data.
            </summary>
            <param name="entity">The entity.</param>
            <param name="viewModel">The view model.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MyAPITest.Manager.BaseManager`2.PrepareSingleReturn(`0)">
            <summary>
            Prepares the single return.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MyAPITest.Manager.BaseManager`2.PrepareMultipleReturn(System.Collections.Generic.List{`0})">
            <summary>
            Prepares the multiple return.
            </summary>
            <param name="entities">The entities.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:MyAPITest.Manager.Interface.IBaseManager`2">
            <summary>
            Base Manager
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <typeparam name="UViewModel">The type of the view model.</typeparam>
        </member>
        <member name="M:MyAPITest.Manager.Interface.IBaseManager`2.Get">
            <summary>
            Gets this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Manager.Interface.IBaseManager`2.GetById(System.Int32)">
            <summary>
            Gets the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Manager.Interface.IBaseManager`2.Post(`1)">
            <summary>
            Posts the specified entity.
            </summary>
            <param name="model">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Manager.Interface.IBaseManager`2.Patch(System.Int32,`1)">
            <summary>
            Patches the specified entity.
            </summary>
            <param name="model">The entity.</param>
        </member>
        <member name="M:MyAPITest.Manager.Interface.IBaseManager`2.Delete(System.Int32)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:MyAPITest.Manager.Interface.IBaseManager`2.PrepareAddData(`1)">
            <summary>
            Prepares the add data.
            </summary>
            <param name="viewModel">The view model.</param>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Manager.Interface.IBaseManager`2.PrepareUpdateData(`0,`1)">
            <summary>
            Prepares the update data.
            </summary>
            <param name="entity">The entity.</param>
            <param name="viewModel">The view model.</param>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Manager.Interface.IBaseManager`2.PrepareSingleReturn(`0)">
            <summary>
            Prepares the single return.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Manager.Interface.IBaseManager`2.PrepareMultipleReturn(System.Collections.Generic.List{`0})">
            <summary>
            Prepares the multiple return.
            </summary>
            <param name="entities">The entities.</param>
            <returns></returns>
        </member>
        <member name="T:MyAPITest.Manager.Interface.IUserManager">
            <summary>
            IUserManager
            </summary>
        </member>
        <member name="T:MyAPITest.Manager.UserManager">
            <summary>
            UserManager
            </summary>
        </member>
        <member name="M:MyAPITest.Manager.UserManager.#ctor(MyAPITest.Repository.Interfaces.IUserRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:MyAPITest.Manager.UserManager"/> class.
            </summary>
            <param name="repository">The repository.</param>
        </member>
        <member name="M:MyAPITest.Manager.UserManager.PrepareAddData(MyAPITest.ViewModels.UserViewModel)">
            <summary>
            Prepares the add data.
            </summary>
            <param name="viewModel">The view model.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MyAPITest.Manager.UserManager.PrepareUpdateData(MyAPITest.Models.User,MyAPITest.ViewModels.UserViewModel)">
            <summary>
            Prepares the update data.
            </summary>
            <param name="entity">The entity.</param>
            <param name="viewModel">The view model.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MyAPITest.Manager.UserManager.PrepareSingleReturn(MyAPITest.Models.User)">
            <summary>
            Prepares the single return.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MyAPITest.Manager.UserManager.PrepareMultipleReturn(System.Collections.Generic.List{MyAPITest.Models.User})">
            <summary>
            Prepares the multiple return.
            </summary>
            <param name="entities">The entities.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:MyAPITest.Models.APIContext">
            <summary>
            APIContext
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.DbContext" />
        </member>
        <member name="M:MyAPITest.Models.APIContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{MyAPITest.Models.APIContext})">
            <summary>
            Initializes a new instance of the <see cref="T:MyAPITest.Models.APIContext"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="P:MyAPITest.Models.APIContext.User">
            <summary>
            Gets or sets the user.
            </summary>
            <value>
            The user.
            </value>
        </member>
        <member name="P:MyAPITest.Models.APIContext.Department">
            <summary>
            Gets or sets the department.
            </summary>
            <value>
            The department.
            </value>
        </member>
        <member name="P:MyAPITest.Models.APIContext.UserDepartment">
            <summary>
            Gets or sets the user department.
            </summary>
            <value>
            The user department.
            </value>
        </member>
        <member name="T:MyAPITest.Models.BaseEntity">
            <summary>
            BaseEntity
            </summary>
        </member>
        <member name="P:MyAPITest.Models.BaseEntity.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:MyAPITest.Models.BaseEntity.Active">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:MyAPITest.Models.User"/> is active.
            </summary>
            <value>
              <c>true</c> if active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MyAPITest.Models.BaseEntity.CreatedAt">
            <summary>
            Gets or sets the created at.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="P:MyAPITest.Models.BaseEntity.UpdatedAt">
            <summary>
            Gets or sets the updated at.
            </summary>
            <value>
            The updated at.
            </value>
        </member>
        <member name="T:MyAPITest.Models.Department">
            <summary>
            Department entity
            </summary>
        </member>
        <member name="P:MyAPITest.Models.Department.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:MyAPITest.Models.Department.Level">
            <summary>
            Gets or sets the level.
            </summary>
            <value>
            The level.
            </value>
        </member>
        <member name="P:MyAPITest.Models.Department.Bedrooms">
            <summary>
            Gets or sets the bedrooms.
            </summary>
            <value>
            The bedrooms.
            </value>
        </member>
        <member name="T:MyAPITest.Models.User">
            <summary>
            User entity
            </summary>
        </member>
        <member name="P:MyAPITest.Models.User.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:MyAPITest.Models.User.Age">
            <summary>
            Gets or sets the age.
            </summary>
            <value>
            The age.
            </value>
        </member>
        <member name="T:MyAPITest.Models.UserDepartment">
            <summary>
            UserDeparment entity
            </summary>
        </member>
        <member name="P:MyAPITest.Models.UserDepartment.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:MyAPITest.Models.UserDepartment.DepartmentId">
            <summary>
            Gets or sets the deparment identifier.
            </summary>
            <value>
            The deparment identifier.
            </value>
        </member>
        <member name="P:MyAPITest.Models.UserDepartment.User">
            <summary>
            Gets or sets the user.
            </summary>
            <value>
            The user.
            </value>
        </member>
        <member name="P:MyAPITest.Models.UserDepartment.Department">
            <summary>
            Gets or sets the department.
            </summary>
            <value>
            The department.
            </value>
        </member>
        <member name="T:MyAPITest.Repository.BaseRepository`1">
            <summary>
            Base Repository
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <seealso cref="T:MyAPITest.Repository.Interfaces.IBaseRepository`1" />
        </member>
        <member name="M:MyAPITest.Repository.BaseRepository`1.#ctor(MyAPITest.Models.APIContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MyAPITest.Repository.BaseRepository`1"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:MyAPITest.Repository.BaseRepository`1.Get">
            <summary>
            Gets this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Repository.BaseRepository`1.GetById(System.Int32)">
            <summary>
            Gets the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Repository.BaseRepository`1.Post(`0)">
            <summary>
            Posts the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Repository.BaseRepository`1.Patch(`0)">
            <summary>
            Patches the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:MyAPITest.Repository.BaseRepository`1.Delete(System.Int32)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="T:MyAPITest.Repository.DepartmentRepository">
            <summary>
            Department Repository
            </summary>
            <seealso cref="!:MyAPITest.Repository.BaseRepository&lt;MyAPITest.Models.Department&gt;" />
            <seealso cref="T:MyAPITest.Repository.Interfaces.IDepartmentRepository" />
        </member>
        <member name="M:MyAPITest.Repository.DepartmentRepository.#ctor(MyAPITest.Models.APIContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MyAPITest.Repository.DepartmentRepository"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:MyAPITest.Repository.Interfaces.IBaseRepository`1">
            <summary>
            Base Repository
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
        </member>
        <member name="M:MyAPITest.Repository.Interfaces.IBaseRepository`1.Get">
            <summary>
            Gets this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Repository.Interfaces.IBaseRepository`1.GetById(System.Int32)">
            <summary>
            Gets the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Repository.Interfaces.IBaseRepository`1.Post(`0)">
            <summary>
            Posts the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:MyAPITest.Repository.Interfaces.IBaseRepository`1.Patch(`0)">
            <summary>
            Patches the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:MyAPITest.Repository.Interfaces.IBaseRepository`1.Delete(System.Int32)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="T:MyAPITest.Repository.Interfaces.IDepartmentRepository">
            <summary>
            Department Repository
            </summary>
            <seealso cref="!:MyAPITest.Repository.Interfaces.IBaseRepository&lt;MyAPITest.Models.Department&gt;" />
        </member>
        <member name="T:MyAPITest.Repository.Interfaces.IUserDepartment">
            <summary>
            User Department
            </summary>
            <seealso cref="!:MyAPITest.Repository.Interfaces.IBaseRepository&lt;MyAPITest.Models.UserDepartment&gt;" />
        </member>
        <member name="T:MyAPITest.Repository.Interfaces.IUserRepository">
            <summary>
            IUser
            </summary>
        </member>
        <member name="T:MyAPITest.Repository.UserDepartmentRepository">
            <summary>
            User Department
            </summary>
            <seealso cref="!:MyAPITest.Repository.BaseRepository&lt;MyAPITest.Models.UserDepartment&gt;" />
            <seealso cref="T:MyAPITest.Repository.Interfaces.IUserDepartment" />
        </member>
        <member name="M:MyAPITest.Repository.UserDepartmentRepository.#ctor(MyAPITest.Models.APIContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MyAPITest.Repository.UserDepartmentRepository"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:MyAPITest.Repository.UserRepository">
            <summary>
            UserRepository
            </summary>
            <seealso cref="T:MyAPITest.Repository.Interfaces.IUserRepository" />
        </member>
        <member name="M:MyAPITest.Repository.UserRepository.#ctor(MyAPITest.Models.APIContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MyAPITest.Repository.UserRepository"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:MyAPITest.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:MyAPITest.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:MyAPITest.Startup"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:MyAPITest.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:MyAPITest.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
        <member name="T:MyAPITest.Utils.ResultMessage">
            <summary>
            ResultMessage
            </summary>
        </member>
        <member name="P:MyAPITest.Utils.ResultMessage.Success">
            <summary>
            Gets or sets the success.
            </summary>
            <value>
            The success.
            </value>
        </member>
        <member name="P:MyAPITest.Utils.ResultMessage.Failure">
            <summary>
            Gets or sets the failure.
            </summary>
            <value>
            The failure.
            </value>
        </member>
        <member name="P:MyAPITest.Utils.ResultMessage.Nologin">
            <summary>
            Gets or sets the nologin.
            </summary>
            <value>
            The nologin.
            </value>
        </member>
        <member name="P:MyAPITest.Utils.ResultMessage.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:MyAPITest.Utils.ResultMessage.oData">
            <summary>
            Gets or sets the o data.
            </summary>
            <value>
            The o data.
            </value>
        </member>
        <member name="T:MyAPITest.ViewModels.BaseViewModel">
            <summary>
            BaseViewModel
            </summary>
        </member>
        <member name="P:MyAPITest.ViewModels.BaseViewModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:MyAPITest.ViewModels.BaseViewModel.Active">
            <summary>
            Gets or sets a value indicating whether this is active.
            </summary>
            <value>
              <c>true</c> if active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MyAPITest.ViewModels.BaseViewModel.CreatedAt">
            <summary>
            Gets or sets the created at.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="P:MyAPITest.ViewModels.BaseViewModel.UpdatedAt">
            <summary>
            Gets or sets the updated at.
            </summary>
            <value>
            The updated at.
            </value>
        </member>
        <member name="T:MyAPITest.ViewModels.DepartmentViewModel">
            <summary>
            DepartmentViewModel
            </summary>
        </member>
        <member name="P:MyAPITest.ViewModels.DepartmentViewModel.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:MyAPITest.ViewModels.DepartmentViewModel.Level">
            <summary>
            Gets or sets the level.
            </summary>
            <value>
            The level.
            </value>
        </member>
        <member name="P:MyAPITest.ViewModels.DepartmentViewModel.Bedrooms">
            <summary>
            Gets or sets the bedrooms.
            </summary>
            <value>
            The bedrooms.
            </value>
        </member>
        <member name="T:MyAPITest.ViewModels.LoginViewModel">
            <summary>
            LoginViewModel
            </summary>
        </member>
        <member name="P:MyAPITest.ViewModels.LoginViewModel.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:MyAPITest.ViewModels.LoginViewModel.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="T:MyAPITest.ViewModels.UserDepartmentViewModel">
            <summary>
            UserDepartmentViewModel
            </summary>
            <seealso cref="T:MyAPITest.ViewModels.BaseViewModel" />
        </member>
        <member name="P:MyAPITest.ViewModels.UserDepartmentViewModel.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:MyAPITest.ViewModels.UserDepartmentViewModel.DepartmentId">
            <summary>
            Gets or sets the department identifier.
            </summary>
            <value>
            The department identifier.
            </value>
        </member>
        <member name="T:MyAPITest.ViewModels.UserViewModel">
            <summary>
            UserViewModel
            </summary>
        </member>
        <member name="P:MyAPITest.ViewModels.UserViewModel.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:MyAPITest.ViewModels.UserViewModel.Age">
            <summary>
            Gets or sets the age.
            </summary>
            <value>
            The age.
            </value>
        </member>
        <member name="P:MyAPITest.ViewModels.UserViewModel.Department">
            <summary>
            Gets or sets the department.
            </summary>
            <value>
            The department.
            </value>
        </member>
    </members>
</doc>
